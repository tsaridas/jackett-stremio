name: ghcr-publish

on:
  push:
    branches:
      - development

env:
  TMP_LOCAL_IMAGE: localhost:5000/${{ github.repository }}
  REGISTRY: ghcr.io
  REGISTRY_IMAGE: ${{ github.repository }}
  REGISTRY_TAG: testing
  VERSION: testing
  BRANCH: development

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        run: |
          mkdir -p /tmp/images
          platform=${{ matrix.platform }}
          echo "TARFILE=${platform//\//-}.tar" >> $GITHUB_ENV
          echo "TAG=${{ env.TMP_LOCAL_IMAGE }}:${platform//\//-}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform }}
          build-args: |
               VERSION=${{ env.VERSION }}
          tags: ${{ env.TAG }}
          outputs: type=docker,dest=/tmp/images/${{ env.TARFILE }}
          #cache-from: type=gha
          #cache-to: type=gha,mode=max

      - name: Upload image
        uses: actions/upload-artifact@v3
        with:
          name: images
          path: /tmp/images/${{ env.TARFILE }}
          if-no-files-found: error
          retention-days: 1
  

  push:
    runs-on: ubuntu-latest
    needs:
      - build
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Download images
        uses: actions/download-artifact@v3
        with:
          name: images
          path: /tmp/images
      - name: Load images
        run: |
          for image in /tmp/images/*.tar; do
            docker load -i $image
          done
      - name: Push images to local registry
        run: |
          docker push -a ${{ env.TMP_LOCAL_IMAGE }}
      - name: Login to GitHub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        run: |
          docker buildx imagetools create -t ${{ env.REGISTRY }}/${{ env.REGISTRY_IMAGE }}:${{ env.REGISTRY_TAG }} \
            $(docker image ls --format '{{.Repository}}:{{.Tag}}' '${{ env.TMP_LOCAL_IMAGE }}' | tr '\n' ' ')
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.REGISTRY_IMAGE }}:${{ env.REGISTRY_TAG }}

